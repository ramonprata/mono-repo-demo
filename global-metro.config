const path = require('path');
const { getDefaultConfig } = require("metro-config");
const pathToCommonFolder = path.join(path.resolve(__dirname), '/../common');
const extraNodeModules = {
  common: pathToCommonFolder,
};
const watchFolders = [pathToCommonFolder];
module.exports = (async () => {
  const {
    resolver: { sourceExts, assetExts }
  } = await getDefaultConfig(__dirname);
  return {
    transformer: {
      babelTransformerPath: require.resolve("react-native-svg-transformer"),
      getTransformOptions: async () => ({
        transform: {
          experimentalImportSupport: false,
          inlineRequires: false,
        },
      }),
    },
    resolver: {
      assetExts: assetExts.filter(ext => ext !== "svg"),
      sourceExts: [...sourceExts, "svg"],
      extraNodeModules: new Proxy(extraNodeModules, {
        get: (target, name) =>
          name in target
            ? target[name]
            : path.join(process.cwd(), `node_modules/${name}`),
      }),
    },
    watchFolders
  };
})();